import { useSession } from "next-auth/react";
import { useRouter } from "next/router";
import { api } from "~/utils/api";
import ErrorPage from "./Error";
import Head from "next/head";
import Image from "next/image";
import FollowButton from "./Buttons/FollowButton";
import { Tabs } from "~/components/Tabs";

const ProfileHeader = () => {
  const router = useRouter();
  const { userId } = router.query;
  const { data: sessionData } = useSession();

  const tabsData = [
    {
      label: "Home",
      path: `/${String(userId)}/Featured`,
      // current: `/${String(userId)}/ProfileVideos}`,
      current: router.pathname === `/[userId]/Featured`,
      content:
        "",
    },
    {
      label: "Videos",
      path: `/${String(userId)}/Videos`,
      // current: `/${String(userId)}/ProfileVideos}`,
      current: router.pathname === `/[userId]/Videos`,
      content:
        "",
    },
    {
      label: "Shorts",
      path: `/${String(userId)}/Shorts`,
      current: router.pathname === `/[userId]/Shorts`,
      // current: `/${String(userId)}/ProfileVideos}`,
      content:
      "Will be updated soon",
    },
    {
      label: "Live",
      path: `/${String(userId)}/Streams`,
      current: router.pathname === `/[userId]/Streams`,
      // current: `/${String(userId)}/ProfileVideos}`,
      content:
        "Will be updated soon",
    },
    {
      label: "Playlists",
      path: `/${String(userId)}/Playlists`,
      current: router.pathname === `/[userId]/Playlists`,
      // current: `/${String(userId)}/ProfileVideos}`,
      content:
        "",
    },
    {
      label: "Community",
      path: `/${String(userId)}/Community`,
      current: router.pathname === `/[userId]/Community`,
      // current: `/${String(userId)}/ProfileVideos}`,
      content:
        "",
    },
  ];

  userId == sessionData?.user.id && console.log("this is authenticated");

  const { data, isLoading, error } = api.user.getChannelById.useQuery({
    id: userId as string,
    // eslint-disable-next-line @typescript-eslint/non-nullable-type-assertion-style
    viewerId: sessionData?.user.id as string,
  });
  const channel = data?.user;
  const viewer = data?.viewer;

  const errorTypes = !channel || !viewer || error;
  const currentUser = sessionData?.user.id === userId;
  const Error = () => {
    if (isLoading) {
      return <>Loading...</>;
    } else if (errorTypes) {
      <ErrorPage title="Not found channel" desc="Please try again later" />;
    } else {
      return <></>;
    }
  };

  return (
    <>
      <Head>
        <title className="text-lg">
          {channel?.name ? channel.name + " - Youtube" : ""}
        </title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {errorTypes ? (
        <>
          <Error />
        </>
      ) : (
        <>
          <div className="flex h-full w-full flex-col ">
            {!currentUser && (
              <div className="h-52 w-full   ">
                <div className="relative h-full w-full rounded-xl ">
                  {!channel.backgroundImage ? (
                    <div className="absolute inset-0  rounded-xl bg-white object-cover">
                      {" "}
                    </div>
                  ) : (
                    <Image
                      src={channel.backgroundImage ?? "./background.jpg"}
                      className="absolute inset-0  rounded-xl object-cover"
                      alt=""
                      fill
                    />
                  )}
                </div>
              </div>
            )}

            <div className=" flex h-60 items-center gap-x-6">
              <div className="relative ml-0 hidden h-36 w-36 rounded-full md:block">
                {channel.image ? (
                  <Image
                    src={channel.image ?? "/background.jpg"}
                    className="absolute inset-0  rounded-full  object-cover"
                    alt=""
                    fill
                  />
                ) : (
                  <>
                    <div className="absolute inset-0  flex  items-center justify-center rounded-full bg-black object-cover text-7xl font-semibold text-white">
                      {data.user.handle ?? data.user.name?.charAt(0)}
                    </div>
                  </>
                )}
              </div>
              <div className="flex flex-col gap-y-2 ">
                <h2 className="text-4xl font-bold">{channel.name}</h2>
                <div className="flex items-center gap-x-2">
                  <p className="text-gray-500">{channel.handle} </p>
                  <p className="text-gray-500">
                    ‧ {channel.followers} followers
                  </p>
                  <p className="text-gray-500">
                    ‧ {channel.videosQuantity} video
                  </p>
                </div>
                <p className="text-gray-500">{channel.description}</p>
                <p className="">
                  <span className="link link-info">
                    instagram.com/{channel.handle}
                  </span>{" "}
                  <span className="font-semibold hover:cursor-pointer">
                    và 9 đường liên kết khác
                  </span>
                </p>
                <div className="">
                  {userId !== sessionData?.user.id && (
                    <FollowButton
                      viewerId={sessionData?.user.id ?? ""}
                      followingId={userId as string}
                      viewer={viewer}
                    />
                  )}
                  {userId === sessionData?.user.id && (
                    <div className="flex items-center gap-x-4 ">
                      <button
                        className="btn btn-square btn-sm  w-fit px-4"
                        onClick={() => router.push(`/Settings`)}
                      >
                        Edit info{" "}
                      </button>
                      <button
                        className="btn btn-square btn-sm  w-fit px-4"
                        onClick={() => router.push(`/dashboard`)}
                      >
                        Edit video{" "}
                      </button>
                    </div>
                  )}
                </div>
              </div>
            </div>

            {/* Tabs */}
            <Tabs tabsData={tabsData} />
          </div>
        </>
      )}
    </>
  );
};

export default ProfileHeader;
