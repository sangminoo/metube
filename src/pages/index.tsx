import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import { Layout, MuliColumnVideo } from "~/components/Components";
import ErrorPage from "~/components/Error";

import { api } from "~/utils/api";
import CardSkeleton from "~/components/CardSkeleton";

export default function Home() {
  // const hello = api.post.hello.useQuery({ text: "from tRPC" });

  const { data, isLoading, error } = api.video.getRandomVideos.useQuery(40);
  // console.log(data?.videos);

  const Message = () => {
    if (isLoading) {
      return <CardSkeleton cards={30} />;
    } else if (error ?? !data) {
      return <ErrorPage title="Not found" desc="No videos or results found" />;
    }
  };

  return (
    <>
      <Head>
        <title className="text-lg">Youtube</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        {/* <div>Main Main</div> */}

        {/* Main */}
        {!data ?? error ? (
          // <ErrorPage />
          <Message />
        ) : (
          <>
            <>
              <MuliColumnVideo
                users={(data?.users ?? []).map((user) => ({
                  image: user?.image ?? "",
                  name: user?.name ?? "",
                }))}
                videos={(data?.videos ?? []).map((video) => ({
                  id: video?.id ?? "",
                  title: video?.title ?? "",
                  thumbnailUrl: video?.thumbnailUrl ?? "",
                  createdAt: video?.createdAt ?? new Date(),
                  views: video?.views ?? 0,
                }))}
              />
            </>
            {/* {data?.videos.map((video) => (
              <div className="flex flex-col gap-3" key={video?.id}>
                <div className="w-full space-y-5 rounded-md p-2">
                  <div className="flex flex-col gap-y-2">
                    <div className="rounded-md bg-gray-600 py-28  md:py-28 lg:py-[88px]" />
                    <div className="flex gap-x-2  ">
                      <div className="rounded-full bg-gray-600 p-6" />
                      <div className="flex w-full flex-col gap-y-2 lg:gap-y-1">
                        <div className="max-w-[90%] rounded-sm bg-gray-600  p-2" />
                        <div className="max-w-[70%] rounded-sm bg-gray-600  p-2" />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            ))} */}
          </>
        )}

        {/* <div className="bg-white"> <SliderTabs /></div> */}
      </Layout>
    </>
  );
}

// function AuthShowcase() {
//   const { data: sessionData } = useSession();

//   // const { data: secretMessage } = api.post.getSecretMessage.useQuery(
//   //   undefined, // no input
//   //   { enabled: sessionData?.user !== undefined },
//   // );

//   return (
//     <div className="flex flex-col items-center justify-center gap-4">
//       <p className="text-center text-2xl text-white">
//         {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
//         {/* {secretMessage && <span> - {secretMessage}</span>} */}
//       </p>
//       <button
//         className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
//         onClick={sessionData ? () => void signOut() : () => void signIn()}
//       >
//         {sessionData ? "Sign out" : "Sign in"}
//       </button>
//     </div>
//   );
// }
